<cart-drawer {% if request.design_mode %}handle-section-events{% endif %} class="cart-drawer drawer drawer--lg" id="cart-drawer">
  {%- if cart.item_count == 0 -%}
    <button is="close-button" aria-label="{{ 'general.accessibility.close' | t | escape }}">
      {%- render 'icon' with 'close' -%}
    </button>

    <div class="empty-state align-self-center">
      <div class="empty-state__icon-wrapper">
        {%- render 'icon' with 'cart', width: 32, height: 32, stroke_width: 1 -%}
        <span class="count-bubble count-bubble--lg">0</span>
      </div>

      <div class="prose">
        <p class="h5">{{ 'cart.general.empty' | t }}</p>

        {%- assign button_content = 'cart.general.continue_shopping' | t -%}
        {%- render 'button', href: settings.cart_empty_button_link, size: 'xl', content: button_content -%}
      </div>
    </div>
  {%- else -%}
    <div class="cart-drawer__inner">
      <div class="cart-drawer__top">
        <div class="h-stack items-center justify-between">
          <div class="h-stack grow gap-2 sm:gap-2.5">
            <p class="h5">{{- 'cart.general.title' | t -}}</p>
            <cart-count class="count-bubble count-bubble--md">{{ cart.item_count }}</cart-count>
          </div>

          <button type="button" is="close-button" class="drawer__close-icon">
            <span class="sr-only">{{ 'general.accessibility.close' | t }}</span>
            {%- render 'icon' with 'close' -%}
          </button>
        </div>

        {%- if settings.cart_show_free_shipping_threshold -%}
          {%- render 'free-shipping-bar' -%}
        {%- endif -%}
      </div>

      <div class="v-stack gap-6 sm:gap-8">
        <div class="cart-drawer__line-items mandasa_cart_drawer">
          {%- for line_item in cart.items -%}
            {%- render 'line-item', line_item: line_item, show_desktop_quantity: true -%}
          {%- endfor -%}
        </div>

        {%- if section.settings.products.count > 0 -%}
          <div class="cart-drawer__recommendations">
            <div class="v-stack gap-2.5 sm:gap-4">
              {%- capture carousel_id -%}cart-drawer-recommendations{%- endcapture -%}

              {%- liquid
                assign horizontal_products_blends = true
                assign product_card_background = section.settings.product_card_background | default: product.settings.product_card_background

                if product_card_background != 'rgba(0,0,0,0)' and product_card_background != blank and product_card_background != settings.dialog_background
                  assign horizontal_products_blends = false
                endif

                assign rendered_recommendations = 0

                capture recommendations
                  for recommended_product in section.settings.products
                    assign item_count_in_cart = cart | line_items_for: recommended_product

                    if item_count_in_cart.size == 0
                      render 'horizontal-product', product: recommended_product, show_add_to_cart: true, background: section.settings.product_card_background, text_color: section.settings.product_card_text_color
                      assign rendered_recommendations = rendered_recommendations | plus: 1
                    endif
                  endfor
                endcapture
              -%}

              {%- if rendered_recommendations > 0 -%}
                <div class="h-stack justify-between gap-4">
                  {%- if section.settings.recommendations_title != blank -%}
                    <p>{{ section.settings.recommendations_title | escape }}</p>
                  {%- endif -%}

                  {%- if rendered_recommendations > 1 -%}
                    <div class="h-stack gap-2 hidden sm:flex">
                      <button is="prev-button" class="circle-chevron hover:colors" aria-controls="{{ carousel_id }}" aria-label="{{ 'general.accessibility.previous' | t | escape }}" disabled>{%- render 'icon' with 'chevron-left-small', direction_aware: true -%}</button>
                      <button is="next-button" class="circle-chevron hover:colors" aria-controls="{{ carousel_id }}" aria-label="{{ 'general.accessibility.next' | t | escape }}">{%- render 'icon' with 'chevron-right-small', direction_aware: true -%}</button>
                    </div>
                  {%- endif -%}
                </div>
              {%- endif -%}

              {%- if recommendations != blank -%}
                <scroll-carousel selector=".horizontal-product" id="{{ carousel_id }}" class="horizontal-product-list-carousel {% unless horizontal_products_blends %}separate{% endunless %} scroll-area bleed">
                  <div class="horizontal-product-list {% if horizontal_products_blends %}divide-x{% else %}separate{% endif %}">
                    {{- recommendations -}}
                  </div>
                </scroll-carousel>
              {%- endif -%}
            </div>
          </div>
        {%- endif -%}
      </div>
    </div>

    <div class="v-stack gap-4 sm:gap-6" slot="footer">
      <div class="v-stack gap-1">
        {% for discount_application in cart.cart_level_discount_applications %}
          <div class="h-stack gap-4 justify-between">
            <div class="badge">
              {%- render 'icon' with 'discount' -%} {{- discount_application.title -}}
            </div>

            <span class="text-subdued">-{{ discount_application.total_allocated_amount | money }}</span>
          </div>
        {% endfor %}

        <div class="h-stack gap-4 justify-between">
          <span class="h5">{{ 'cart.general.total' | t }}</span>
          <span class="h5">{{- cart.total_price | money_with_currency -}}</span>
        </div>

        {%- if section.settings.show_shipping_text -%}
          {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
            <p class="text-subdued text-sm">{{ 'cart.general.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}</p>
          {%- elsif cart.taxes_included -%}
            <p class="text-subdued text-sm">{{ 'cart.general.taxes_included_but_shipping_at_checkout' | t }}</p>
          {%- elsif shop.shipping_policy.body != blank -%}
            <p class="text-subdued text-sm">{{ 'cart.general.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}</p>
          {%- else -%}
            <p class="text-subdued text-sm">{{ 'cart.general.taxes_and_shipping_at_checkout' | t }}</p>
          {%- endif -%}
        {%- endif -%}

        {%- if section.settings.show_cart_note -%}
          <button type="button" class="justify-self-start" aria-controls="cart-drawer-note">
            <span class="link text-sm text-subdued">
              {%- if cart.note == blank -%}
                {{- 'cart.general.add_order_note' | t -}}
              {%- else -%}
                {{- 'cart.general.edit_order_note' | t -}}
              {%- endif -%}
            </span>
          </button>

          <cart-note-dialog id="cart-drawer-note" class="cart-drawer__note">
            <div class="cart-drawer__note-inner">
              <div class="v-stack gap-4 sm:gap-6">
                <p class="h5">{{ 'cart.general.order_note' | t }}</p>

                <cart-note class="v-stack gap-4">
                  {%- assign order_note = 'cart.general.order_note' | t -%}
                  {%- assign order_save_label = 'cart.general.save_note' | t -%}

                  {%- render 'input', name: 'note', multiline: 3, label: order_note, value: cart.note -%}

                  <div class="justify-self-start">
                    {%- render 'button', type: 'button', content: order_save_label, size: 'lg', is: 'close-button', secondary: true -%}
                  </div>
                </cart-note>
              </div>
            </div>
          </cart-note-dialog>
        {%- endif -%}
      </div>

      <form action="{{ routes.cart_url }}" method="POST" class="buy-buttons {% if section.settings.show_checkout_button %}buy-buttons--compact{% endif %}">
        {%- assign checkout_label = 'cart.general.checkout' | t -%}

        {%- if section.settings.show_view_cart_button or section.settings.show_checkout_button == false -%}
          <a href="{{ routes.cart_url }}" class="button button--xl {% if section.settings.show_checkout_button %}button--secondary{% endif %}" data-no-instant>
            {{- 'cart.general.view_cart' | t -}}
          </a>
        {%- endif -%}

        {%- if section.settings.show_checkout_button -%}
          {%- render 'button', type: 'submit', content: checkout_label, icon: 'picto-lock', name: 'checkout', size: 'xl' -%}
        {%- endif -%}
      </form>
    </div>
  {%- endif -%}
</cart-drawer>

<style>
  .cart-drawer.drawer--lg {
    padding: 0;
  }

  .cart-drawer .cart-drawer__inner .h5 {
    font-size: var(--font-size-24);
    color: var(--color-primary);
    font-family: var(--font-primary);
    font-weight: var(--font-weight-500);
    line-height: normal;
    letter-spacing: var(--letter-spacing-normal);
  }

  .cart-drawer.drawer::part(content),
  .quantity-selector {
    border-radius: 0px;
  }

  .cart-drawer .cart-drawer__line-items .line-item {
    align-items: flex-start;
    border-bottom: 1px dotted var(--color-grey-05);
    padding: 24px 10px 24px 0;
  }

  .cart-drawer .line-item .quantity-input {
    border-radius: 0px;
    border: none;
    background: var(--color-grey-03);
    font-family: var(--font-secondary);
    font-size: var(--font-size-14);
    font-style: normal;
    font-weight: var(--font-weight-500);
    line-height: normal;
    letter-spacing: -0.42px;
    color: var(--color-primary);
  }

  .cart-drawer .line-item .quantity-selector {
    justify-content: space-between;
    width: 100%;
    max-width: 92px;
    margin: 0 auto;
    height: auto;
    margin-top: auto;
    background: var(--color-grey-03);
    padding: 2px;
  }

  .cart-drawer .line-item .quantity-btn {
    background: var(--color-white);
  }

  .cart-drawer .quantity-btn {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .cart-drawer .line-item .quantity-input,
  .cart-drawer .line-item .quantity-btn {
    width: 100%;
    max-width: 28px;
    height: 28px;
  }

  .cart-drawer .line-item .reversed-link {
    font-family: var(--font-primary);
    font-size: var(--font-size-14);
    font-style: normal;
    font-weight: var(--font-weight-500);
    line-height: 1.45;
    color: var(--color-primary);
    display: block;
  }

  .cart-drawer .line-item__price .price {
    font-family: var(--font-secondary);
    font-size: var(--font-size-14);
    font-style: normal;
    font-weight: var(--font-weight-500);
    line-height: normal;
  }

  .cart-drawer .line-item__media-wrapper {
    background: var(--color-light-beige);
    width: 100%;
    max-width: 114px;
    height: 114px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 16px;
  }

  .cart-drawer .line-item__media-wrapper .line-item__media.rounded-xs {
    border-radius: 0px;
    height: 100%;
    object-fit: contain;
  }

  .cart-drawer .v-stack[slot='footer'] .price {
    font-family: var(--font-secondary);
    font-size: var(--font-size-16);
    font-style: normal;
    font-weight: var(--font-weight-700);
    line-height: normal;
    color: var(--color-primary);
  }

  .cart-drawer .v-stack[slot='footer'] .price .nt-dollar {
    font-weight: var(--font-weight-400);
  }

  .cart-drawer [slot='footer'] .h-stack.gap-4.justify-between .h5 {
    font-family: var(--font-primary);
    font-size: var(--font-size-16);
    font-style: normal;
    font-weight: var(--font-weight-500);
    line-height: normal;
    color: var(--color-primary);
  }

  .cart-drawer [slot='footer'] .text-subdued.text-sm {
    font-family: var(--font-primary);
    font-size: var(--font-size-12);
    font-style: normal;
    font-weight: var(--font-weight-400);
    line-height: normal;
    color: var(--color-primary);
    text-align: var(--text-center);
    padding-top: 16px;
  }

  .cart-drawer .v-stack[slot='footer'] {
    gap: 0;
  }

  .cart-drawer .buy-buttons .button--xl {
    border-radius: 0px;
    color: var(--color-white);
    background: var(--color-grey-07);
    margin-top: 16px;
  }

  .cart-drawer .line-item__info {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 0;
    height: 100%;
  }

  .cart-drawer .remove-button .link {
    font-family: var(--font-primary);
    font-size: var(--font-size-12);
    font-style: normal;
    font-weight: var(--font-weight-400);
    line-height: normal;
    color: var(--color-grey-08);
    margin-top: auto;
    height: 100%;
  }

  .cart-drawer .text-with-icon.justify-center,
  .cart-drawer .buy-buttons .button--xl {
    font-family: var(--font-primary);
    font-size: var(--font-size-16);
    font-style: normal;
    font-weight: var(--font-weight-400);
    line-height: normal;
    color: var(--color-white);
  }

  .cart-drawer .text-with-icon.justify-center svg {
    display: none;
  }

  .cart-drawer.drawer::part(footer) {
    padding-left: 30px;
    padding-right: 30px;
    padding-bottom: 20px;
    border-top: 1px solid var(--color-grey-04);
  }

  .template-product .cart-drawer.drawer::part(footer) {
    width: calc(100% - 60px);
  }

  .cart-drawer .count-bubble {
    display: none;
  }

  .cart-drawer__top {
    gap: 0;
  }

  .cart-drawer__closeButton {
    text-align: var(--text-right);
    padding-bottom: 22px;
  }

  .cart-drawer .line-item__actions {
    height: 100%;
    width: 100%;
    max-width: 92px;
  }

  .cart-drawer .line-item {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0;
  }

  .cart-drawer .line-item__actions .v-stack.gap-2 {
    height: 100%;
  }

  .cart-drawer .line-item__info .text-sm.text-subdued {
    font-family: var(--font-primary);
    font-size: var(--font-size-12);
    font-style: normal;
    font-weight: var(--font-weight-400);
    line-height: normal;
    color: var(--color-grey-08);
  }

  .cart-drawer__line {
    margin: 10px 0 14px;
  }

  .cart-drawer__mainSeriesWrap {
    margin-top: var(--spacing-1);
  }

  .cart-drawer__seriesValue {
    font-family: var(--font-secondary);
    font-size: var(--font-size-12);
    font-style: normal;
    font-weight: var(--font-weight-500);
    line-height: normal;
    letter-spacing: 1.2px;
    color: var(--color-grey-06);
    text-transform: uppercase;
  }

  .cart-drawer .remove-button {
    height: auto;
    margin-top: auto;
    display: flex;
    justify-content: flex-start;
    align-items: flex-end;
  }

  .cart-drawer.drawer::part(content) {
    height: 100vh;
  }

  .cart-drawer.drawer::part(body) {
    padding: 26px 30px 40px;
  }

  .cart-drawer__top {
    padding-bottom: 6px;
  }

  .cart-drawer.drawer::part(overlay) {
    background: rgba(0, 0, 0, 0.3);
  }

  .template-product .cart-drawer.drawer::part(body) {
    width: calc(100% - 60px);
  }

  .cart-drawer .price-list {
    justify-content: flex-end;
  }

  .quantity-btn__plusButton,
  .quantity-btn__minusButton {
    font-size: 0;
  }

  .quantity-btn.plus-btn,
  .quantity-btn.minus-btn {
    position: relative;
  }

  .quantity-btn.plus-btn:after,
  .quantity-btn.minus-btn:after {
    content: '';
    width: 22px;
    height: 22px;
    position: absolute;
    left: 2px;
    right: 0;
    top: 3px;
    bottom: 0;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quantity-btn.plus-btn:after {
    background: url(https://cdn.shopify.com/s/files/1/0575/1576/9926/files/plus-icon.png?v=1702273668) no-repeat;
    background-size: contain;
  }

  .quantity-btn.minus-btn:after {
    background: url(https://cdn.shopify.com/s/files/1/0575/1576/9926/files/minus-icon.png?v=1702274736) no-repeat;
    background-size: contain;
  }

  .drawer::part(body) {
    overflow: hidden;
  }

  .cart-drawer .cart-drawer__line-items {
    overflow: auto;
    display: flex;
    flex-direction: column;
    width: 100%;
    max-height: calc(100vh - 320px);
  }

  .cart-drawer .cart-drawer__line-items::-webkit-scrollbar {
    width: 1px;
  }

  .cart-drawer .cart-drawer__line-items::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  .cart-drawer .cart-drawer__line-items::-webkit-scrollbar-thumb {
    background: #888;
  }

  .cart-drawer .cart-drawer__line-items::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  @media (min-width: 769px) {
    .cart-drawer.drawer--lg {
      width: 480px;
    }

    .cart-drawer.drawer--lg::part(content) {
      transform: translateX(100%);
      transition: transform 0.5s linear;
    }

    .cart-drawer.drawer--lg[open]::part(content) {
      transform: translateX(0%);
    }
  }

  @media (max-width: 768px) {
    .cart-drawer.drawer::part(body) {
      padding: 16px 20px;
    }

    .cart-drawer.drawer--lg {
      width: 100%;
    }

    .cart-drawer__closeButton {
      padding-bottom: 16px;
    }

    .cart-drawer .cart-drawer__line-items .line-item {
      display: grid;
      gap: 12px;
      justify-content: space-between;
    }

    .cart-drawer .cart-drawer__line-items {
      max-height: calc(100vh - 320px);
    }

    .template-product .cart-drawer.drawer::part(body) {
      width: calc(100% - 40px);
    }

    .cart-drawer .line-item__info {
      gap: 0;
      width: 132px;
      max-width: 132px;
    }

    .cart-drawer .line-item__info .v-stack {
      word-wrap: break-word;
    }

    .cart-drawer.drawer--lg {
      transform: none !important;
    }

    .cart-drawer.drawer--lg::part(content) {
      transform: translateY(100%);
      transition: transform 0.5s linear;
    }

    .cart-drawer.drawer--lg[open]::part(content) {
      transform: translateY(0%);
    }

    .cart-drawer .line-item__media-wrapper {
      max-width: 100%;
      height: auto;
    }

    .cart-drawer .cart-drawer__inner .h5 {
      font-size: var(--font-size-18);
    }

    .cart-drawer .line-item__actions {
      margin-left: auto;
    }

    .remove-button .text-xs {
      display: block;
    }

    .text-xs.mobile-remove-button,
    .mobile-hidden-cart {
      display: none;
    }

    .cart-drawer .line-item__actions {
      display: block;
    }

    .line-item__price {
      text-align: var(--text-right);
    }

    .cart-drawer.drawer::part(content) {
      height: calc(100vh - 44px);
      margin-top: 44px;
      border-radius: 10px 10px 0px 0px;
      background: var(--color-white);
    }

    .cart-drawer [slot='footer'] .h-stack.gap-4.justify-between .h5 {
      font-size: var(--font-size-14);
    }
  }

  @media (max-width: 440px) {
    .cart-drawer .line-item__media-wrapper {
      max-width: 86px;
      height: 86px;
    }
  }
</style>

{% schema %}
{
  "name": "Cart drawer",
  "settings": [
    {
      "type": "paragraph",
      "content": "Cart drawer won't appear to your customers if you have set the cart type to Page in the global theme settings."
    },
    {
      "type": "paragraph",
      "content": "Free shipping bar can be configured in global cart settings."
    },
    {
      "type": "checkbox",
      "id": "show_cart_note",
      "label": "Show cart note",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_shipping_text",
      "label": "Show shipping text",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_view_cart_button",
      "label": "Show view cart button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_checkout_button",
      "label": "Show checkout button",
      "default": true
    },
    {
      "type": "header",
      "content": "Product recommendations"
    },
    {
      "type": "text",
      "id": "recommendations_title",
      "label": "Heading",
      "default": "Trending this month"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Recommendations",
      "info": "Suggest additional products to your customers. Recommendations already in the cart are automatically hidden.",
      "limit": 10
    },
    {
      "type": "color",
      "id": "product_card_background",
      "label": "Product card background"
    },
    {
      "type": "color",
      "id": "product_card_text_color",
      "label": "Product card text"
    }
  ]
}
{% endschema %}
