{% assign productEvent = product.metafields.custom.product_launch_event.value %}
{% liquid
  assign now = 'now' | date: '%Y-%m-%dT%H:%M'
%}
<div class="il-productAccoridon{% if productEvent.end_date < now %} il-productAccoridon--hidden{% endif %}">
  <div class="section-stack il-productAccoridon__container">
    {%- if section.blocks.size > 0 -%}
      <div class="section-stack__main">
        <div class="il-productAccoridon__mainCard">
          {%- for block in section.blocks -%}
            {%- if block.settings.title != blank -%}
              <details {% if id %}id="{{ id | escape }}"{% endif %} class="{{ class }} accordion {% if size %}accordion--{{ size }}{% endif %} group" aria-expanded="{% if open %}true{% else %}false{% endif %}" is="accordion-disclosure" {% if open %}open{% endif %} {{ block.shopify_attributes }}>
                <summary>
                  <div class="accordion__toggle bold">
                    {%- if icon -%}
                      <div class="text-with-icon">
                        {%- render 'icon' with icon -%}
                        <span {% if size == 'lg' %}class="h6"{% endif %}>{{- block.settings.title -}}</span>
                      </div>
                    {%- else -%}
                      <span {% if size == 'lg' %}class="h6"{% endif %}>{{- block.settings.title -}}</span>
                    {%- endif -%}
              
                    <span class="circle-chevron group-hover:colors group-expanded:colors group-expanded:rotate">{%- render 'icon' with 'chevron-accordion' -%}</span>
                  </div>
                </summary>
              
                <div class="accordion__content">
                  {% if block.type == "specification" %}
                    {% if block.settings.image_one != blank or block.settings.image_two != blank or block.settings.video != blank %}
                      <div class="accordion__content--specificationWrap">
                        {% if block.settings.image_one != blank or block.settings.image_two != blank %}
                          <div class="accordion__content--imagesWrap">
                            <div class="accordion__content--leftImage">
                              <img 
                                src="{{ block.settings.image_one | img_url: 'master' }}" 
                                width="100%" 
                                height="100%" 
                                alt="Image Left"
                                class="accordion__content--leftImage"
                              >
                            </div>
                            <div class="accordion__content--specImage">
                              <img 
                                src="{{ block.settings.image_two | img_url: 'master' }}" 
                                width="100%" 
                                height="100%" 
                                alt="Image Right"
                                class="accordion__content--specImage"
                              >
                            </div>
                          </div>
                        {% endif %}
                        {% if block.settings.video != blank %}
                          <div class="accordion__content--videoWrap accordion__content--videosWrap">
                            <video
                              class="accordion__content--video"
                              loop
                              muted
                              playsinline
                              preload="none"
                              data-video
                              controls
                            >
                              <source src="{{ block.settings.video.sources[1].url }}" type="video/mp4">
                            </video>
                          </div>
                        {% else %}
                          {% if block.settings.youtube-video != blank %}
                            <div class="accordion__content--videoWrap accordion__content--videoWrapYoutube">
                              {% liquid
                                assign youtube = block.settings['youtube-video'] | split: 'v='
                                assign youtube_id = youtube[1] | split: '&'
                              %}
                              <iframe
                                type="text/html"
                                width="100%"
                                height="100%"
                                src="https://www.youtube.com/embed/{{ youtube_id[0] }}?loop=1&rel=0&showinfo=0&controls=1&color=white&iv_load_policy=3&playlist={{ youtube_id[0] }}"
                                frameborder="0"
                                allowfullscreen
                                data-video
                              ></iframe>
                            </div>
                          {% endif %}
                        {% endif %}
                      </div>
                    {% endif %}
                  {% endif %}
                  {% if block.type == "awards" %}
                    {% assign iconWithText = product.metafields.custom.awards_and_qualification_certification.value %}
                    {% assign iconWithTextValue = iconWithText.icon_with_text.value %}
                    <div class="accordion__content--awardsQualification">
                      {% if block.settings.heading != blank %}
                        <h2 class="accordion__content--awardsHeading text-p text-p--14">{{ block.settings.heading }}</h2>
                      {% endif %}
                      {% if iconWithTextValue %}
                        <div class="accordion__content--IconWithTextWrap">
                          {% for iconValue in iconWithTextValue %}
                            <div class="accordion__content--IconWithTextCard">
                              <div class="accordion__content--IconWithTextImageCard">
                                <img 
                                  src="{{ iconValue.image | img_url: 'master' }}" 
                                  width="100%" 
                                  height="100%" 
                                  alt="Image Card" 
                                  class="accordion__content--IconWithTextImage"
                                >
                              </div>
                              <div class="accordion__content--IconWithTextContentCard">
                                <h2 class="accordion__content--IconWithTextHeading text-p text-p--14">{{ iconValue.heading }}</h2>
                                <div class="accordion__content--IconWithTextContent text-p text-p--14">{{ iconValue.content | metafield_tag }}</div>
                              </div>
                            </div>
                          {% endfor %}
                        </div>
                      {% endif %}
                      <div class="accordion__content--isoImage">
                        {% if block.settings.image_heading != blank %}
                          <h2 class="accordion__content--imageHeading text-p text-p--14">{{ block.settings.image_heading }}</h2>
                        {% endif %}
                        <div class="accordion__content--isoCard">
                          {% if block.settings.iso_image != blank or block.settings.iso_heading != blank or block.settings.certificate_image != blank %}
                            <div class="accordion__content--isoImageMainWrap">
                              <div class="accordion__content--IconWithCertificateImage">
                                <img 
                                  src="{{ block.settings.certificate_image | img_url: 'master' }}" 
                                  width="100%" 
                                  height="100%" 
                                  alt="Image Card" 
                                  class="accordion__content--IconWithImage"
                                >
                              </div>
                            </div>
                            <div class="accordion__content--isoContent">
                              <h4 class="accordion__content--isoSubTitle text-p text-p--12">{{ block.settings.iso_sub_title }}</h4>
                              <h2 class="accordion__content--isoHeading text-p text-p--14">{{ block.settings.iso_heading }}</h2>
                              <div class="accordion__content--isoContent text-p text-p--14">{{ block.settings.iso_content }}</div>
                            </div>
                          {% endif %}
                        </div>
                      </div>
                    </div>
                  {% endif %}
                </div>
              </details>
            {%- endif -%}
          {%- endfor -%}
        </div>
      </div>
    {%- endif -%}
    {% assign getAccordion = product.metafields.custom.spec_shipping_refund_policy %}
    {% if getAccordion %}
     {% for block in section.blocks %}
      {% if block.type == "exchangepolicy" %}
        <div class="il-productAccoridon__exchangeCard">
          {%- if block.settings.policy_title != blank -%}
            <details {% if id %}id="{{ id | escape }}"{% endif %} class="{{ class }} accordion {% if size %}accordion--{{ size }}{% endif %} group" aria-expanded="{% if open %}true{% else %}false{% endif %}" is="accordion-disclosure" {% if open %}open{% endif %} {{ block.shopify_attributes }}>
              <summary>
                <div class="accordion__toggle bold">
                  <span {% if size == 'lg' %}class="h6"{% endif %}>{{- block.settings.policy_title -}}</span>
                  <span class="circle-chevron group-hover:colors group-expanded:colors group-expanded:rotate">{%- render 'icon' with 'chevron-accordion' -%}</span>
                </div>
              </summary>
              <div class="accordion__content accordion__content--exchangePolicy">
                {% if section.settings.table_heading != blank %}
                  <div class="il-productAccoridon__headingWrap">
                    <h2 class="il-productAccoridon_exchangeHeading text-p text-p--14">
                      {{ section.settings.table_heading }}
                    </h2>
                  </div>
                {% endif %}
                <div class="accordion__content--exchangePolicyCard accordion__content--exchangePolicyCardHead">
                  <div class="accordion__content--policy accordion__content--city text-p text-p--12">
                    {{ block.settings.country_and_city }}
                  </div>
                  <div class="accordion__content--policy accordion__content--provideShipping text-p text-p--12">
                    {{ block.settings.provide_shipping }}
                  </div>
                  <div class="accordion__content--policy accordion__content--shippingService text-p text-p--12">
                    {{ block.settings.shipping_Service }}
                  </div>
                </div>
                {% for inner_block in section.blocks %}
                  {% if inner_block.type == "exchangepolicycontent" %}
                    <div class="accordion__content--exchangePolicyCard accordion__content--exchangePolicyCardInnerContent">
                      <div class="accordion__content--policy accordion__content--city text-p text-p--14">
                        {{ inner_block.settings.country_and_city }}
                      </div>
                      <div class="accordion__content--policy accordion__content--provideShipping text-p text-p--14">
                        {{ inner_block.settings.provide_shipping }}
                      </div>
                      <div class="accordion__content--policy accordion__content--shippingService text-p text-p--14">
                        {{ inner_block.settings.shipping_Service }}
                      </div>
                    </div>
                  {% endif %}
                {% endfor %}
                <div class="il-productAccoridon__exchangeContentWrap">
                  <div class="il-productAccoridon__remoteText text-p text-p--14">
                    {{ section.settings.remote_text }}
                  </div>
                  <div class="il-productAccoridon__contentLists">
                    <h4 class="il-productAccoridon__contentListMainHeading text-p text-p--14">
                      {{ section.settings.list_main_heading }}
                    </h4>
                    <h4 class="il-productAccoridon__contentListSubHeading text-p text-p--14">
                      {{ section.settings.list_sub_heading }}
                    </h4>
                    <div class="il-productAccoridon__contentList text-p text-p--14">
                      {{ section.settings.list_content }}
                    </div>
                    <h5 class="il-productAccoridon__contentListSubHeading text-p text-p--14">
                      {{ section.settings.list_inner_sub_heading }}
                    </h5>
                    <div class="il-productAccoridon__contentList il-productAccoridon__contentList--two text-p text-p--14">
                      {{ section.settings.list_sub_content }}
                    </div>
                  </div>
                </div>
              </div>
            </details>
          {%- endif -%}
        </div>
      {% endif %}
     {% endfor %}
    {% endif %}
    
  </div>
</div>

<style>
  .il-productAccoridon__container {
    width: 100%;
    max-width: 1320px;
    margin: 0 auto;
    padding: 60px 20px;
    gap: 0;
  }

  .il-productAccoridon__container .section-stack__main {
    width: 100%;
  }

  .accordion__content--IconWithTextHeading {
    font-weight: var(--font-weight-700);
  }

  .accordion__content--imagesWrap {
    display: grid;
    grid-template-columns: repeat(2,1fr);
    gap: 60px;
    margin-bottom: 40px;
  } 

  .accordion__content--specImage {
    width: 100%;
  }

  .accordion__content--IconWithTextWrap {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 80px;
  } 

  .accordion__content--IconWithTextImage {
    width: 100%;
    max-width: 100px;
  }

  .accordion__content--IconWithTextCard {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .accordion__content--awardsHeading {
    margin: 24px 0 28px;
  }

  .accordion__content--imageHeading {
    margin: 50px 0 28px;
  }

  .accordion__content--awardsHeading,
  .accordion__content--imageHeading {
    line-height: normal;
    letter-spacing: 0.7px;
    font-weight: var(--font-weight-600);
    font-size: var(--font-size-14);
    font-family: var(--font-secondary);
  }

  .accordion__content--videoWrap {
    position: relative;
    overflow: hidden;
    padding-bottom: 56%;
  }

  .accordion__content--videoWrap iframe, .accordion__content--video {
    position: absolute;
    height: 100%;
    width: 100%;
  }

  .accordion__toggle.bold {
    line-height: normal;
    letter-spacing: 1.8px;
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-18);
    font-family: var(--font-primary);
  }

  .accordion__content--isoCard {
    display: flex;
    gap: 30px;
    align-items: center;
  }

  .accordion__content--IconWithCertificateImage .accordion__content--IconWithImage,
  .accordion__content--IconWithIsoImage .accordion__content--IconWithImage {
    width: 100%;
  }

  .accordion__content--isoImageMainWrap {
    width: 100%;
    max-width: 300px;
  }

  .accordion__content--IconWithIsoImage .accordion__content--IconWithImage {
    max-width: 74px;
  }

  .accordion__content--isoSubTitle {
    line-height: 18px;
    font-weight: var(--font-weight-500);
  }

  .accordion__content--isoHeading {
    line-height: 24px;
    font-weight: var(--font-weight-700);
    margin-top: 2px;
  } 

  .il-productAccoridon__exchangeCard .accordion.group {
    border-top: none;
  }

  .il-productAccoridon .circle-chevron,
  .il-productAccoridon .group:hover .circle-chevron.group-hover\:colors:not([disabled]), 
  .il-productAccoridon .circle-chevron.hover\:colors:hover:not([disabled]),
  .il-productAccoridon .group[aria-expanded=true] .circle-chevron.group-expanded\:colors:not([disabled]) {
    background: var(--color-transparent);
  } 

  .accordion__content--exchangePolicyCard {
    display: flex;
    text-align: left;
    width: 100%;
    border-bottom: 1px solid var(--color-grey-04);
    padding: 16px 18px;
    background: var(--color-grey-09);
  }

  .accordion__content--city {
    width: 54px;
  }

  .accordion__content--provideShipping {
    width: 100%;
    max-width: 375px;
  }

  .accordion__content--policy {
    line-height: normal;
    color: var(--color-primary);
    font-weight: var(--font-weight-400);
  }

  .accordion__content--exchangePolicyCardHead .accordion__content--policy {
    color: var(--color-grey-08);
  }

  .il-productAccoridon_exchangeHeading,
  .il-productAccoridon__contentListMainHeading {
    font-weight: var(--font-weight-600);
    letter-spacing: 0.7px;
  }

  .il-productAccoridon_exchangeHeading {
    padding: 24px 0 28px;
  }

  .il-productAccoridon__remoteText ul {
    list-style: disc;
    padding-left: 15px;
    padding-top: 16px;
    padding-bottom: 50px;
  }

  .il-productAccoridon__remoteText ul li {
    color: var(--color-red);
    line-height: 26px;
    font-weight: var(--font-weight-400);
  }

  .il-productAccoridon__contentListMainHeading {
    padding-bottom: 28px;
  }

  .il-productAccoridon__contentList ul {
    list-style: disc;
    padding-left: 25px;
    padding-top: 10px;
    padding-bottom: 30px;
  }

  .il-productAccoridon .accordion {
    border-color: var(--color-grey-04);
  }

  .il-productAccoridon__contentList--two {
    padding-bottom: 40px;
  }

  .accordion__content--isoContent {
    margin-top: 5px;
  }

  .accordion__content--IconWithTextHeading,
  .accordion__content--IconWithTextContent {
    font-family: var(--font-secondary);
  }

  .il-productAccoridon--hidden {
    display: none;
  }

  .accordion__content--awardsQualification {
    width: 100%;
    max-width: 926px;
  }

  @media (max-width: 768px) {
    .accordion__content--imagesWrap {
      margin-bottom: 50px;
      margin-top: 5.5px;
    }

    .accordion__content--isoImageMainWrap {
      max-width: 100%;
    }

    .il-productAccoridon .accordion__content {
      padding: 0;
      margin: 0;
    }

    .accordion__content--imagesWrap,
    .accordion__content--IconWithTextWrap {
      grid-template-columns: repeat(1,1fr);
      gap: 30px;
    }

    .accordion__content--shippingService,
    .accordion__content--provideShipping {
      width: 100%;
      max-width: 100%;
    }

    .accordion__content--exchangePolicyCard {
      justify-content: space-between;
    }

    .il-productAccoridon__contentListMainHeading {
      padding-bottom: 18px;
    }

    .il-productAccoridon__container {
      padding: 40px 20px;
    }

    .accordion__content--policy {
      margin-right: 24px;
    }
  
    .accordion__content--policy.accordion__content--shippingService {
      margin: 0;
    }

    .il-productAccoridon__contentList,
    .accordion__content--policy {
      word-break: break-all;
    }

    .accordion__content--city {
      width: 90px;
    }

    .accordion__content--isoCard {
      flex-wrap: wrap;
      flex-direction: column;
      margin-bottom: 40px;
    }

    .accordion__content--isoContent {
      width: 100%;
    }

    .accordion__content--IconWithTextCard {
      gap: 14px;
    }

    .accordion__content--IconWithTextImage {
      max-width: 36px;
    }

    .accordion__content--imageHeading {
      margin: 50px 0 18px;
    }

    .accordion__content--videoWrap {
      margin-bottom: 40px;
    }

    .il-productAccoridon .accordion__toggle.bold {
      padding: 18px 0;
      letter-spacing: 1.6;
    }
  }
</style>

{% schema %}
{
  "name": "Product Accordion content",
  "class": "shopify-section--accordion-content",
  "settings": [
    {
      "type": "text",
      "id": "table_heading",
      "label": "Table Heading"
    },
    {
      "type": "richtext",
      "id": "remote_text",
      "label": "Remote Text"
    },
    {
      "type": "text",
      "id": "list_main_heading",
      "label": "List Main Heading"
    },
    {
      "type": "text",
      "id": "list_sub_heading",
      "label": "List Sub Heading"
    },
    {
      "type": "richtext",
      "id": "list_content",
      "label": "List Content"
    },
    {
      "type": "text",
      "id": "list_inner_sub_heading",
      "label": "List Inner Sub Heading"
    },
    {
      "type": "richtext",
      "id": "list_sub_content",
      "label": "List Sub Content"
    }
  ],
  "blocks": [
    {
      "name": "Specification",
      "type": "specification",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "image_picker",
          "id": "image_one",
          "label": "Image One"
        },
        {
          "type": "image_picker",
          "id": "image_two",
          "label": "Image Two"
        },
        {
          "type": "video",
          "id": "video",
          "label": "Video"
        },
        {
          "type": "url",
          "id": "youtube-video",
          "label": "Youtube Video"
        }
      ]
    },
    {
      "name": "Awards",
      "type": "awards",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "text",
          "id": "image_heading",
          "label": "Image Heading"
        },
        {
          "type": "image_picker",
          "id": "certificate_image",
          "label": "Certificate Image"
        },
        {
          "type": "text",
          "id": "iso_sub_title",
          "label": "ISO Sub Title"
        },
        {
          "type": "text",
          "id": "iso_heading",
          "label": "ISO Heading"
        },
        {
          "type": "richtext",
          "id": "iso_content",
          "label": "ISO Content"
        }
      ]
    },
    {
      "name": "Exchange Policy",
      "type": "exchangepolicy",
      "settings": [
        {
          "type": "text",
          "id": "policy_title",
          "label": "Exchange & Policy Title"
        },
        {
          "type": "text",
          "id": "country_and_city",
          "label": "Country and City"
        },
        {
          "type": "text",
          "id": "provide_shipping",
          "label": "Provide Shipping",
          "info": "Provide shipping plus price service"
        },
        {
          "type": "text",
          "id": "shipping_Service",
          "label": "Shipping Service",
          "info": "No shipping service is provided yet"
        }
      ]
    },
    {
      "name": "Exchange Policy Content",
      "type": "exchangepolicycontent",
      "settings": [
        {
          "type": "text",
          "id": "country_and_city",
          "label": "Country and City"
        },
        {
          "type": "text",
          "id": "provide_shipping",
          "label": "Provide Shipping",
          "info": "Provide shipping plus price service"
        },
        {
          "type": "text",
          "id": "shipping_Service",
          "label": "Shipping Service",
          "info": "No shipping service is provided yet"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Accordion content"
    }
  ]
}
{% endschema %}
